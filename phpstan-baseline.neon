parameters:
	ignoreErrors:
		-
			message: "#^Class IMAP\\\\Connection not found\\.$#"
			count: 1
			path: src/ImapResource.php

		-
			message: "#^If condition is always false\\.$#"
			count: 1
			path: src/ImapResource.php

		-
			message: "#^Instanceof between resource and IMAP\\\\Connection will always evaluate to false\\.$#"
			count: 1
			path: src/ImapResource.php

		-
			message: "#^Parameter \\$resource of method Ddeboer\\\\Imap\\\\ImapResource\\:\\:__construct\\(\\) has invalid type IMAP\\\\Connection\\.$#"
			count: 1
			path: src/ImapResource.php

		-
			message: "#^Property Ddeboer\\\\Imap\\\\ImapResource\\:\\:\\$resource \\(resource\\) does not accept IMAP\\\\Connection\\|resource\\.$#"
			count: 1
			path: src/ImapResource.php

		-
			message: "#^Parameter \\#2 \\$array of function implode expects array\\<string\\>, array\\<int, Ddeboer\\\\Imap\\\\MessageInterface\\|int\\|string\\> given\\.$#"
			count: 1
			path: src/Mailbox.php

		-
			message: "#^Parameter \\#3 \\$reverse of function imap_sort expects bool, bool\\|int given\\.$#"
			count: 1
			path: src/Mailbox.php

		-
			message: "#^Call to function is_numeric\\(\\) with int will always evaluate to true\\.$#"
			count: 1
			path: src/Message.php

		-
			message: "#^Cannot call method getDecodedContent\\(\\) on mixed\\.$#"
			count: 2
			path: src/Message/AbstractMessage.php

		-
			message: "#^Cannot call method getSubtype\\(\\) on mixed\\.$#"
			count: 2
			path: src/Message/AbstractMessage.php

		-
			message: "#^Call to function base64_decode\\(\\) requires parameter \\#2 to be true\\.$#"
			count: 1
			path: src/Message/AbstractPart.php

		-
			message: "#^Method Ddeboer\\\\Imap\\\\Message\\\\AbstractPart\\:\\:getChildren\\(\\) return type with generic interface RecursiveIterator does not specify its types\\: TKey, TValue$#"
			count: 1
			path: src/Message/AbstractPart.php

		-
			message: "#^Method Ddeboer\\\\Imap\\\\Message\\\\AbstractPart\\:\\:getChildren\\(\\) should return RecursiveIterator\\|null but returns mixed\\.$#"
			count: 1
			path: src/Message/AbstractPart.php

		-
			message: "#^Strict comparison using \\=\\=\\= between false and string will always evaluate to false\\.$#"
			count: 1
			path: src/Message/AbstractPart.php

		-
			message: "#^Interface Ddeboer\\\\Imap\\\\Message\\\\PartInterface extends generic interface RecursiveIterator but does not specify its types\\: TKey, TValue$#"
			count: 1
			path: src/Message/PartInterface.php

		-
			message: "#^Call to function is_int\\(\\) with Ddeboer\\\\Imap\\\\MessageInterface will always evaluate to false\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Call to function is_object\\(\\) with Ddeboer\\\\Imap\\\\MessageInterface will always evaluate to true\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Class ArrayIterator specifies template type TKey of interface Iterator as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Class ArrayIterator specifies template type TKey of interface Traversable as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Else branch is unreachable because ternary operator condition is always true\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Interface Iterator specifies template type TKey of interface Traversable as int but it's already specified as mixed\\.$#"
			count: 2
			path: src/MessageIterator.php

		-
			message: "#^Interface SeekableIterator specifies template type TKey of interface Iterator as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Interface SeekableIterator specifies template type TKey of interface Traversable as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Parameter \\#1 \\$array of method ArrayIterator\\<int,Ddeboer\\\\Imap\\\\MessageInterface\\>\\:\\:__construct\\(\\) expects array\\<int, Ddeboer\\\\Imap\\\\MessageInterface\\>, array\\<int\\> given\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Property Ddeboer\\\\Imap\\\\MessageIterator\\:\\:\\$resource is never read, only written\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Unreachable statement \\- code above always terminates\\.$#"
			count: 1
			path: src/MessageIterator.php

		-
			message: "#^Class ArrayIterator specifies template type TKey of interface Iterator as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/Test/RawMessageIterator.php

		-
			message: "#^Class ArrayIterator specifies template type TKey of interface Traversable as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/Test/RawMessageIterator.php

		-
			message: "#^Interface Iterator specifies template type TKey of interface Traversable as int but it's already specified as mixed\\.$#"
			count: 2
			path: src/Test/RawMessageIterator.php

		-
			message: "#^Interface SeekableIterator specifies template type TKey of interface Iterator as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/Test/RawMessageIterator.php

		-
			message: "#^Interface SeekableIterator specifies template type TKey of interface Traversable as int but it's already specified as mixed\\.$#"
			count: 1
			path: src/Test/RawMessageIterator.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsInt\\(\\) with int will always evaluate to true\\.$#"
			count: 2
			path: tests/ConnectionTest.php

		-
			message: "#^Parameter \\#1 \\$resource of class Ddeboer\\\\Imap\\\\ImapResource constructor expects IMAP\\\\Connection\\|resource, string given\\.$#"
			count: 1
			path: tests/ConnectionTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertArrayHasKey\\(\\) with 'date' and \\*NEVER\\* will always evaluate to true\\.$#"
			count: 1
			path: tests/MessageTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertArrayHasKey\\(\\) with 'from' and Ddeboer\\\\Imap\\\\Message\\\\Headers will always evaluate to false\\.$#"
			count: 1
			path: tests/MessageTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertArrayHasKey\\(\\) with 'recent' and \\*NEVER\\* will always evaluate to true\\.$#"
			count: 1
			path: tests/MessageTest.php

		-
			message: "#^Call to static method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Ddeboer\\\\\\\\Imap\\\\\\\\Message\\\\\\\\EmailAddress' and Ddeboer\\\\Imap\\\\Message\\\\EmailAddress will always evaluate to true\\.$#"
			count: 2
			path: tests/MessageTest.php

		-
			message: "#^Cannot access property \\$parts on mixed\\.$#"
			count: 2
			path: tests/MessageTest.php

